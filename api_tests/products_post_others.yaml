# Test generated by RoostGPT for test beetbox using AI Type Open AI and AI Model gpt-4

# RoostTestHash=dcd186097b

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: products_post_others.csv
    fields:
      - id
      - name
      - description
      - price
    skipHeader: true

scenarios:
  - name: Test failure, edge and error cases for /products POST endpoint
    flow:
      # Test case where the Authorization token is invalid
      - post:
          url: "/products"
          headers:
            Authorization: "InvalidToken"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 401
            - hasHeader: "WWW-Authenticate"
          log: "Testing the case where the Authorization token is invalid"

      # Short delay before the next request
      - think: 1

      # Test case where the required "name" field is missing from the payload
      - post:
          url: "/products"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 400
            - hasProperty: "errors[0].message"
          log: "Testing the case where the required 'name' field is missing from the payload"

      # Short delay before the next request
      - think: 1

      # Test case where the URL is invalid
      - post:
          url: "/invalid-url"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 404
          log: "Testing the case where the URL is invalid"

      # Short delay before the next request
      - think: 1

      # Test case where the price field in the payload is a string instead of an integer
      - post:
          url: "/products"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "invalid price"
          expect:
            - statusCode: 400
            - hasProperty: "errors[0].message"
          log: "Testing the case where the price field in the payload is a string instead of an integer"

      # Short delay before the next request
      - think: 1

      # Test case where the HTTP method is invalid
      - get:
          url: "/products"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 405
          log: "Testing the case where the HTTP method is invalid"
