# Test generated by RoostGPT for test beetbox using AI Type Open AI and AI Model gpt-4

# RoostTestHash=ab8efa24ed

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 5
  plugins:
    expect: {}
  payload:
    path: "products_productId_get_others.csv"
    fields:
      - "productId"
    skipHeader: true

scenarios:
  - name: "Get product by id - failure scenarios"
    flow:
      - log: "Sending request with incorrect product id"
        get:
          url: "/products/{{ productId }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          capture:
            - json: "$"
              as: "responseBody"
        expect:
          - statusCode: 404
          - hasProperty: "responseBody.message"
          - equals: 
              - "{{ responseBody.message }}"
              - "Product not found"
        think: 1

      - log: "Sending request with invalid product id format"
        get:
          url: "/products/abc"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          capture:
            - json: "$"
              as: "responseBody"
        expect:
          - statusCode: 400
          - hasProperty: "responseBody.message"
          - equals: 
              - "{{ responseBody.message }}"
              - "Invalid product id format"
        think: 1

      - log: "Sending request with invalid authorization token"
        get:
          url: "/products/{{ productId }}"
          headers:
            Authorization: "InvalidToken"
          capture:
            - json: "$"
              as: "responseBody"
        expect:
          - statusCode: 401
          - hasProperty: "responseBody.message"
          - equals: 
              - "{{ responseBody.message }}"
              - "Unauthorized access"
        think: 1

      - log: "Sending request to invalid URL"
        get:
          url: "/invalid/{{ productId }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          capture:
            - json: "$"
              as: "responseBody"
        expect:
          - statusCode: 404
          - hasProperty: "responseBody.message"
          - equals: 
              - "{{ responseBody.message }}"
              - "URL not found"
        think: 1
