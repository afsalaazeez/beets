# Test generated by RoostGPT for test beetbox-api using AI Type Open AI and AI Model gpt-4

# RoostTestHash=7b2a6b6959

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 5
  payload:
    path: "products_productId_put_others.csv"
    fields:
      - "id"
      - "name"
      - "description"
      - "price"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "Test scenario for failure cases, edge cases and error handling"
    flow:
      - log: "Sending a PUT request with an invalid productId"
        put:
          url: "/products/invalidProductId"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 404
            - hasProperty: "message"
      - think: 1

      - log: "Sending a PUT request with a missing required field in the body"
        put:
          url: "/products/{{ someProductId }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 400
            - hasProperty: "message"
      - think: 1

      - log: "Sending a PUT request with an invalid authorization token"
        put:
          url: "/products/{{ someProductId }}"
          headers:
            Authorization: "InvalidToken"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 401
            - hasProperty: "message"
      - think: 1

      - log: "Sending a PUT request with a non-existing productId"
        put:
          url: "/products/999999999999"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 404
            - hasProperty: "message"
