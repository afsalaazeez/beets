# Test generated by RoostGPT for test beetbox using AI Type Open AI and AI Model gpt-4

# RoostTestHash=7b2a6b6959

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "products_productId_put_others.csv"
    fields: ["productId", "name", "description", "price"]
    skipHeader: true
  plugins:
    expect: {}
scenarios:
  - name: "Update product scenario"
    flow:
      - log: "Invalid authorization token scenario"
        put:
          url: "/products/{{ productId }}"
          headers:
            Authorization: "InvalidToken"
            Content-Type: "application/json"
          json:
            id: "{{ productId }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 403
            - hasProperty: "message"
        think: 1
      - log: "Invalid product ID scenario"
        put:
          url: "/products/invalidProductId"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            id: "{{ productId }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 404
            - hasProperty: "message"
        think: 1
      - log: "Invalid URL scenario"
        put:
          url: "/invalidUrl/{{ productId }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            id: "{{ productId }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 404
            - hasProperty: "message"
        think: 1
      - log: "Missing required field scenario"
        put:
          url: "/products/{{ productId }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            id: "{{ productId }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 400
            - hasProperty: "message"
        think: 1
